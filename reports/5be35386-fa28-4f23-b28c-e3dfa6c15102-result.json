{"name": "test_login_corrent_userandPwd[CDBAdmin-CDBAdmin.123]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"app\"]/div/div/div/div/div[1]/div/form/div[4]/div/div/div/div/button\"}\n  (Session info: chrome-headless-shell=123.0.6312.122); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6ADB97032+63090]\n\t(No symbol) [0x00007FF6ADB02C82]\n\t(No symbol) [0x00007FF6AD99EC65]\n\t(No symbol) [0x00007FF6AD9E499D]\n\t(No symbol) [0x00007FF6AD9E4ADC]\n\t(No symbol) [0x00007FF6ADA25B37]\n\t(No symbol) [0x00007FF6ADA0701F]\n\t(No symbol) [0x00007FF6ADA23412]\n\t(No symbol) [0x00007FF6ADA06D83]\n\t(No symbol) [0x00007FF6AD9D83A8]\n\t(No symbol) [0x00007FF6AD9D9441]\n\tGetHandleVerifier [0x00007FF6ADF925AD+4238317]\n\tGetHandleVerifier [0x00007FF6ADFCF70D+4488525]\n\tGetHandleVerifier [0x00007FF6ADFC79EF+4456495]\n\tGetHandleVerifier [0x00007FF6ADC70576+953270]\n\t(No symbol) [0x00007FF6ADB0E54F]\n\t(No symbol) [0x00007FF6ADB09224]\n\t(No symbol) [0x00007FF6ADB0935B]\n\t(No symbol) [0x00007FF6ADAF9B94]\n\tBaseThreadInitThunk [0x00007FF830FD7344+20]\n\tRtlUserThreadStart [0x00007FF8322E26B1+33]", "trace": "self = <gy_iot_autoTest.test_case.test_iot_login.test_pc_login.Test_login object at 0x0000017FD849B6D0>\naccount = 'CDBAdmin', pwd = 'CDBAdmin.123'\n\n    @pytest.mark.parametrize('account,pwd',[(\"CDBAdmin\",'CDBAdmin.123'),(\"CDAdmin\",'CDBAdmin.123'),(\"CDAdmin\",'CDAdmin.123')])\n    def test_login_corrent_userandPwd(self,account,pwd):\n        self.driver.implicitly_wait(3)\n        username_ele = '//*[@id=\"form_item_account\"]'\n        self.driver.find_element(by=By.XPATH,value=username_ele).clear()\n        self.driver.find_element(by=By.XPATH,value=username_ele).send_keys(account)\n        pwd_ele = '//*[@id=\"form_item_password\"]'\n        self.driver.find_element(by=By.XPATH,value=pwd_ele).clear()\n        self.driver.find_element(by=By.XPATH,value=pwd_ele).send_keys(pwd)\n        log_btn = '//*[@id=\"app\"]/div/div/div/div/div[1]/div/form/div[4]/div/div/div/div/button'\n>       self.driver.find_element(by=By.XPATH,value=log_btn).click()\n\ntest_case\\test_iot_login\\test_pc_login.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\apploadpath\\pythonPath\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nD:\\apploadpath\\pythonPath\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000017FD7655790>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF6ADAF9B94]\\\\n\\\\tBaseThreadInitThunk [0x00007FF830FD7344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF8322E26B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"app\"]/div/div/div/div/div[1]/div/form/div[4]/div/div/div/div/button\"}\nE         (Session info: chrome-headless-shell=123.0.6312.122); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6ADB97032+63090]\nE       \t(No symbol) [0x00007FF6ADB02C82]\nE       \t(No symbol) [0x00007FF6AD99EC65]\nE       \t(No symbol) [0x00007FF6AD9E499D]\nE       \t(No symbol) [0x00007FF6AD9E4ADC]\nE       \t(No symbol) [0x00007FF6ADA25B37]\nE       \t(No symbol) [0x00007FF6ADA0701F]\nE       \t(No symbol) [0x00007FF6ADA23412]\nE       \t(No symbol) [0x00007FF6ADA06D83]\nE       \t(No symbol) [0x00007FF6AD9D83A8]\nE       \t(No symbol) [0x00007FF6AD9D9441]\nE       \tGetHandleVerifier [0x00007FF6ADF925AD+4238317]\nE       \tGetHandleVerifier [0x00007FF6ADFCF70D+4488525]\nE       \tGetHandleVerifier [0x00007FF6ADFC79EF+4456495]\nE       \tGetHandleVerifier [0x00007FF6ADC70576+953270]\nE       \t(No symbol) [0x00007FF6ADB0E54F]\nE       \t(No symbol) [0x00007FF6ADB09224]\nE       \t(No symbol) [0x00007FF6ADB0935B]\nE       \t(No symbol) [0x00007FF6ADAF9B94]\nE       \tBaseThreadInitThunk [0x00007FF830FD7344+20]\nE       \tRtlUserThreadStart [0x00007FF8322E26B1+33]\n\nD:\\apploadpath\\pythonPath\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "description": "登录用例", "parameters": [{"name": "account", "value": "'CDBAdmin'"}, {"name": "pwd", "value": "'CDBAdmin.123'"}], "start": 1714985410346, "stop": 1714985413560, "uuid": "f677e0e8-3b7b-427a-810a-ff2c4fa8f808", "historyId": "ad99ff295a261289b4e9a77e43bcd58e", "testCaseId": "f5159c028274e00827ac1f834097ba28", "fullName": "test_case.test_iot_login.test_pc_login.Test_login#test_login_corrent_userandPwd", "labels": [{"name": "parentSuite", "value": "test_case.test_iot_login"}, {"name": "suite", "value": "test_pc_login"}, {"name": "subSuite", "value": "Test_login"}, {"name": "host", "value": "DESKTOP-SQSUSVC"}, {"name": "thread", "value": "17300-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_iot_login.test_pc_login"}]}